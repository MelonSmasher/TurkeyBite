services:

  opensearch:
    image: opensearchproject/opensearch:3
    container_name: ${OPENSEARCH_HOST:-opensearch}
    restart: unless-stopped
    expose:
      - "9200"
      - "9600"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    environment:
      - TZ
      - bootstrap.memory_lock
      - node.name
      - discovery.type
      - OPENSEARCH_JAVA_OPTS
      - OPENSEARCH_INITIAL_ADMIN_PASSWORD
      - OPENSEARCH_CLUSTER_NAME
    networks:
      - turkeybite
    volumes:
      - opensearch_data:/usr/share/opensearch/data
    healthcheck:
      test: ["CMD-SHELL", "curl -s -f https://localhost:9200/_cluster/health?pretty -u admin:${OPENSEARCH_INITIAL_ADMIN_PASSWORD} --insecure || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:3
    container_name: opensearch-dashboards
    restart: unless-stopped
    depends_on:
      opensearch:
        condition: service_healthy
    ports:
      - 5601:5601
    environment:
      - OPENSEARCH_HOSTS
    networks:
      - turkeybite

  bind9:
    image: ubuntu/bind9:9.18-24.04_beta
    container_name: bind9
    restart: unless-stopped
    expose:
      - "53"
      - "53/udp"
    environment:
      - TZ
    networks:
      turkeybite:
        ipv4_address: ${BIND9_IP:-172.172.0.100}
    volumes:
      - bind9_cache:/var/cache/bind

  valkey:
    image: valkey/valkey:8-alpine
    container_name: ${VALKEY_HOST:-valkey}
    restart: unless-stopped
    volumes:
      - valkey_data:/data
    ports:
      - "${VALKEY_PORT:-6379}:${VALKEY_PORT:-6379}" # Map the specified port (default: 6379) for connections
    secrets:
      - valkey_password # Use a secure password stored in a Docker secret
    networks:
      - turkeybite
    command: >
      sh -c "valkey-server
      --save '${VALKEY_SAVE_INTERVAL_SECONDS:-60}' '${VALKEY_SAVE_KEYS:-1}'
      --loglevel ${VALKEY_LOGLEVEL:-warning}
      --requirepass $(cat /run/secrets/valkey_password)
      --port ${VALKEY_PORT:-6379}"
    environment:
      - TZ
      - VALKEY_PORT # Environment variable for the port
      - VALKEY_LOGLEVEL # Environment variable for the logging level
      - VALKEY_SAVE_INTERVAL_SECONDS # Environment variable for the database save interval
      - VALKEY_SAVE_KEYS # Environment variable for the number of key changes required to save
    healthcheck:
      # Define a health check for the Valkey service
      test: [
          "CMD-SHELL",
          # Run redis-cli to send a PING command and check for PONG
          "redis-cli -a $(cat /run/secrets/valkey_password) -h localhost -p ${VALKEY_PORT:-6379} PING | grep PONG || exit 1",
        ]
      interval: 5s # Check health every 5 seconds
      timeout: 3s # Timeout for health check commands
      retries: 3 # Retry up to 3 times before marking the service as unhealthy

  turkeybite-core:
    build:
      context: ./
      dockerfile: docker/core/Dockerfile
    container_name: turkeybite-core
    restart: unless-stopped
    depends_on:
      valkey:
        condition: service_healthy
      opensearch:
        condition: service_healthy
    volumes:
      - ./config.yaml:/turkey-bite/config.yaml:ro
      - ./vols/lists:/turkey-bite/lists
      - ./vols/logs:/var/log/turkey-bite
    secrets:
      - valkey_password
    environment:
      - TZ
      - VALKEY_HOST
      - VALKEY_PORT
    networks:
      - turkeybite
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536

  turkeybite-worker:
    build:
      context: .
      dockerfile: docker/worker/Dockerfile
    container_name: turkeybite-worker
    restart: unless-stopped
    depends_on:
      valkey:
        condition: service_healthy
      opensearch:
        condition: service_healthy
      bind9:
        condition: service_started
    volumes:
      - ./config.yaml:/turkey-bite/config.yaml:ro
      - ./vols/lists:/turkey-bite/lists
      - ./vols/logs:/var/log/turkey-bite
    secrets:
      - valkey_password
    environment:
      - TZ
      - VALKEY_HOST
      - VALKEY_PORT
      - TURKEYBITE_WORKER_PROCS
    networks:
      - turkeybite
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536

  turkeybite-librarian:
    build:
      context: .
      dockerfile: docker/librarian/Dockerfile
    container_name: turkeybite-librarian
    restart: unless-stopped
    depends_on:
      valkey:
        condition: service_healthy
    volumes:
      - ./config.yaml:/turkey-bite/config.yaml:ro
      - ./vols/lists:/turkey-bite/lists
      - ./vols/logs:/var/log/turkey-bite
    secrets:
      - valkey_password
    environment:
      - TZ
      - VALKEY_HOST
      - VALKEY_PORT
      - TURKEYBITE_HOSTS_INTERVAL_MIN
      - TURKEYBITE_IGNORELIST_INTERVAL_MIN
    networks:
      - turkeybite

secrets:
  # Define a Docker secret for storing the Valkey password
  valkey_password:
    file: vols/secrets/valkey_password.txt # Path to the file containing the Valkey password

volumes:
  # Define a volume for Valkey data persistence
  valkey_data:
  # Define a volume for Bind9 cache persistence
  bind9_cache:
  # Define a volume for OpenSearch data persistence
  opensearch_data:

networks:
  turkeybite:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.172.0.0/16
          gateway: 172.172.0.1